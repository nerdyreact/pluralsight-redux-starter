{"version":3,"sources":["CoursesPage.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;IAAY,a;;AACZ;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGI,yBAAY,KAAZ,EAAmB,OAAnB,EAA4B;AAAA;;;;;;;;AAAA,mGAClB,KADkB,EACX,OADW;;AASxB,cAAK,uBAAL,GAA+B,MAAK,uBAAL,CAA6B,IAA7B,OAA/B;;AATwB;AAW3B;;;;kCAGS,M,EAAQ,K,EAAO;AACrB,mBAAO;AAAA;gBAAA,EAAI,KAAK,KAAT;gBAAiB,OAAO;AAAxB,aAAP;AACH;;;kDAEyB;AACtB,wCAAe,IAAf,CAAoB,SAApB;AACH;;;iCAEQ;AAAA,gBACE,OADF,GACa,KAAK,KADlB,CACE,OADF;;AAEL,mBACI;AAAA;gBAAA;gBACI;AAAA;oBAAA;oBAAA;AAAA,iBADJ;gBAEI,yCAAO,MAAK,QAAZ;AACI,2BAAM,YADV;AAEO,+BAAU,iBAFjB;AAGO,6BAAS,KAAK,uBAHrB,GAFJ;gBAMI;AAAA;oBAAA;oBACI,sDAAY,SAAS,OAArB;AADJ;AANJ,aADJ;AAaH;;;;EAtCqB,gBAAM,S;;AAyChC,YAAY,SAAZ,GAAwB;AACpB,aAAS,gBAAM,SAAN,CAAgB,KAAhB,CAAsB,UADX;;AAGpB,aAAS,gBAAM,SAAN,CAAgB,MAAhB,CAAuB;AAHZ,CAAxB;;AAMA,SAAS,eAAT,CAAyB,KAAzB,EAAgC,QAAhC,EAA0C;AACtC,WAAO;AACH,iBAAS,MAAM;AADZ,KAAP;;;AAKH;;AAED,SAAS,kBAAT,CAA4B,QAA5B,EAAsC;AAClC,WAAO;;AAEH,iBAAS,+BAAmB,aAAnB,EAAkC,QAAlC;AAFN,KAAP;AAIH;;kBAEc,yBAAQ,eAAR,EAAyB,kBAAzB,EAA6C,WAA7C,C","file":"CoursesPage-compiled.js","sourcesContent":["import React, {PropTypes} from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as courseActions from '../../actions/courseActions';\nimport CourseList from './CourseList';\nimport {browserHistory} from 'react-router';\n\nclass CoursesPage extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n\n\n        // bind context of event handlers to this object.\n        // It's best to do this in the constructor rather than on the render function in order to avoid repeated function creations after every change\n\n        //this.onClickSave = this.onClickSave.bind(this);\n        //this.onTitleChange = this.onTitleChange.bind(this);\n        this.redirectToAddCoursePage = this.redirectToAddCoursePage.bind(this);\n\n    }\n\n\n    courseRow(course, index) {\n        return <li key={index}>{course.title}</li>;\n    }\n\n    redirectToAddCoursePage() {\n        browserHistory.push('/course');\n    }\n\n    render() {\n        const {courses} = this.props;\n        return (\n            <div>\n                <h1>Courses</h1>\n                <input type=\"submit\"\n                    value=\"Add Course\"\n                       className=\"btn btn-primary\"\n                       onClick={this.redirectToAddCoursePage} />\n                <ul>\n                    <CourseList courses={courses} />\n                </ul>\n\n            </div>\n        );\n    }\n}\n\nCoursesPage.propTypes = {\n    courses: React.PropTypes.array.isRequired,\n    //dispatch: React.PropTypes.func.isRequired, // will only be added if mapDispatchToProps is omitted from connect\n    actions: React.PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        courses: state.courses\n    };\n    // the courses property name is what will be added to the component's props\n    // the state.courses (the value) is the property we created in our reducer\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        //createCourse: course => dispatch(courseActions.createCourse(course))\n        actions: bindActionCreators(courseActions, dispatch)\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CoursesPage); // if we omit mapDispatchToProps, we let connect inject a default dispatch function to our component's props\n"]}